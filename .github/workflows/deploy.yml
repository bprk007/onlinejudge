name: Deploy to AWS EC2 via ECR

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      aws_region:
        description: 'AWS Region (e.g., ap-south-1)'
        required: false
        default: ''

env:
  AWS_REGION: ${{ github.event.inputs.aws_region || secrets.AWS_REGION }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:

      - name: Checkout code
        uses: actions/checkout@v3


      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}


      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push Docker image
        run: |
          AWS_ACCOUNT_ID=${{ secrets.AWS_ACCOUNT_ID }}
          IMAGE_TAG=${GITHUB_SHA::7}  # Short commit SHA
          IMAGE_URI="$AWS_ACCOUNT_ID.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}"

          echo "Building Docker image..."
          docker build -t $IMAGE_URI:latest -t $IMAGE_URI:$IMAGE_TAG .

          echo "Pushing Docker image to ECR..."
          docker push $IMAGE_URI:latest
          docker push $IMAGE_URI:$IMAGE_TAG

      - name: Deploy on EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            set -e

            AWS_REGION=${{ env.AWS_REGION }}
            AWS_ACCOUNT_ID=${{ secrets.AWS_ACCOUNT_ID }}
            IMAGE_URI="$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:latest"
            CONTAINER_NAME="my-container"
            PORT=8000
            ENV_FILE="/home/ec2-user/.env"  # Change if different
            LOG_FILE="$HOME/deploy.log"

            echo "=== Deployment started at $(date) ===" | tee -a $LOG_FILE


            echo "[INFO] Logging into ECR..." | tee -a $LOG_FILE
            aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com

            echo "[INFO] Stopping old container..." | tee -a $LOG_FILE
            docker stop $CONTAINER_NAME || true
            docker rm $CONTAINER_NAME || true

            echo "[INFO] Freeing port $PORT..." | tee -a $LOG_FILE
            fuser -k ${PORT}/tcp || true


            echo "[INFO] Cleaning unused Docker resources..." | tee -a $LOG_FILE
            docker system prune -af --volumes || true


            echo "[INFO] Pulling latest image from ECR: $IMAGE_URI" | tee -a $LOG_FILE
            docker pull $IMAGE_URI


            echo "[INFO] Running new container..." | tee -a $LOG_FILE
            docker run -d \
              --name $CONTAINER_NAME \
              --env-file $ENV_FILE \
              -p ${PORT}:${PORT} \
              --restart unless-stopped \
              $IMAGE_URI

            echo "[SUCCESS] Deployment completed at $(date)" | tee -a $LOG_FILE
